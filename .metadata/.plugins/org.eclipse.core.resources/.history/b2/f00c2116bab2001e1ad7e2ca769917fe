package com.ecommerce.controller;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpEntity;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.http.MediaType;
import com.ecommerce.entity.Product;

import com.ecommerce.service.ProductService;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

@RestController
@RequestMapping("/product")
@EnableScheduling
public class ProductController {
	
	@Autowired
	private ProductService productService;
	
	@Scheduled(fixedRate = 900000)
	@GetMapping("/saveAllProducts")
	public void saveAllProducts() throws IOException {
		String apiUrl = "https://dummyjson.com/products";
		Request request = new Request(null, apiUrl, null, null, null);
		ObjectMapper objectMapper = new ObjectMapper();
		OkHttpClient httpClient = new OkHttpClient();
		try (Response response = httpClient.newCall(request).execute()) {
			if (response.isSuccessful()) {
				JsonNode responseBody = objectMapper.readTree(response.body().string());
				JsonNode products = responseBody.get("products");
				System.out.println(products);
			}
		}
	}
	
	
//	@PostMapping("/createproduct")
//	public ResponseEntity<Response> createUser(@RequestBody Product product){
//		productService.createProduct(product);
//		Response response = new Response("success", "Product Created Successfully!!");
//	    return new ResponseEntity<>(response, HttpStatus.OK);
//	}

}
